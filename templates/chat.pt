<html xmlns:tal="http://xml.zope.org/namespaces/tal">
  <head>
    <style>
    	#chatmessages {
    	   background-color: #eeeeee;
    	   overflow: auto;
    	   height: 600;
    	   width: 600;
    	   font-size: 11px;
    	}
    	.userid {
    	   color: blue;
    	   font-size: 9px;
    	}
    	.timestamp {
    	   color: blue;
    	   font-size: 9px;
    	}
    </style>
    <script language="JavaScript" type="text/javascript">
        var djConfig = {
            isDebug: true//,
            //debugAtAllCosts: true
        };
    </script>
    <script language="JavaScript" type="text/javascript" src="Presentation/Tofu/Ajax/js/dojo/dojo.js"></script>
    <script language="JavaScript" type="text/javascript">
    lastTimestamp = null;
    maxChatMessages = 50;
    callbackBackoff = 10000;
    function cb_timeout() {
        chatBind();
    };
    function populate_after_submit( type, data, event, kwArgs ){
        form = document.getElementById('chat_form');
        form['message'].value = '';
        form['submit'].value = 'send';
        form['submit'].disabled = false;
        populate_messages( type, data, event, kwArgs );
    };
    
    function populate_messages( type, data, event, kwArgs ) {
        
        chatMessages = document.getElementById('chatmessages');
        form = document.getElementById('chat_form');
        
        callbackBackoff = data['backoff'];
        
        messages = data['messages'];
        
    	dojo.debug("Retrieved data, length is "+data['messages'].length);
    	dojo.debug("Backoff set to", data['backoff']);
        for (var x = 0; x < messages.length; x++)
        {
           msgContainer = document.createElement("div");
           msgContainer.className = 'chatmessagecontainer';
           msgDiv = document.createElement("div");
           msgDiv.innerHTML = messages[x]['message']
           msgDiv.className = 'message';
           userDiv = document.createElement("div");
           userDiv.innerHTML = 'user ID: '+messages[x]['user_id']
           userDiv.className = 'userid';
           timeDiv = document.createElement("div");
           timeDiv.innerHTML = 'timestamp: '+messages[x]['timestamp']
           timeDiv.className = 'timestamp';
           
           msgContainer.appendChild(timeDiv);
           msgContainer.appendChild(userDiv);
           msgContainer.appendChild(msgDiv);
           
           chatMessageLength = chatMessages.childNodes.length;
           if (chatMessageLength >= maxChatMessages) {
               chatMessages.removeChild(chatMessages.childNodes[0]);
	           chatMessages.appendChild(msgContainer);
	       } else {
	           chatMessages.appendChild(msgContainer);;
	       };
	       
	       lastTimestamp = messages[x]['timestamp'];
	       
           form['last_timestamp'].value = lastTimestamp;
           
           chatMessages.scrollTop = chatMessages.scrollHeight-chatMessages.clientHeight;
        }
    };
    function cb_chat( type, data, event, kwArgs ) {
        delay = callbackBackoff;
        populate_messages( type, data, event, kwArgs);    
        tid = window.setTimeout( "cb_timeout()", delay /* milliseconds */);    
    };

    function chatBind () {
        form = document.getElementById('chat_form');
        groupID = form['group_id'].value;
        dojo.io.bind({
	url: "http://groupserver:8080/example_division/cb_chat",
	load: cb_chat,
        mimetype: "text/json",
        content: {'group_id': groupID, 'last_timestamp': lastTimestamp},
	error: function(type, data, event, kwArgs) { 
             alert('error');/* type will be "error", data will be response data,  event will null, and kwArgs are the keyword arguments used in the dojo.io.bind call. */ },
	timeout: function() { alert('timeout'); /* Called if there is a timeout */},
	timeoutSeconds: 10, //The number of seconds to wait until firing timeout callback in case of timeout.
        preventCache: true
        }); 
    }

    function chatForm() {
      var x = new dojo.io.FormBind({
      formNode: document.getElementById('chat_form'),
      mimetype: 'text/json',
      load: populate_after_submit
      });
      x.onSubmit = function (form) {
      	form['submit'].disable = true;
      	form['submit'].value = 'sending...';
      	return true;
      };
    }
    
    dojo.addOnLoad(chatForm);
    dojo.addOnLoad(chatBind)

    </script>
    <title tal:content="template/title">The title</title>
  </head>
  <body>
    
    <h2>Richard's Seriously Simple AJAX Chat</h2>
    
       <div id="chatmessages"></div>

      <form id="chat_form" method="POST" action="http://groupserver:8080/example_division/submit_message">
          <input type="hidden" name="last_timestamp" value="" />
          <input type="hidden" name="group_id" tal:attributes="value python:request.get('group_id', 'default')" />
          <input type="text" name="message" value="" />
          <input type="submit" name="submit" value="send" />
      </form>

    <div id=dojoDebugOutput></div>

  </body>
</html>
